{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { ThemeContext } from \"./contexts/theme\";\nimport Header from \"./components/Header/Header\";\nimport About from \"./components/About/About\";\nimport Projects from \"./components/Projects/Projects\";\nimport Skills from \"./components/Skills/Skills\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport Contact from \"./components/Contact/Contact\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [{\n    themeName\n  }] = useContext(ThemeContext);\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   <h1>Welcome to React Router!</h1>\n    //   <Routes>\n    //     <Route path=\"/\" element={<HomeT />} />\n    //     <Route path=\"about\" element={<About />} />\n    //   </Routes>\n    // </div>\n    _jsxDEV(\"div\", {\n      id: \"top\",\n      className: `${themeName} app`,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"fifa-autobidder\",\n          element: /*#__PURE__*/_jsxDEV(Autobidder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"fifa-autobidder/manual\",\n          element: /*#__PURE__*/_jsxDEV(Autobidder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(App, \"dNSkDyb+Jm46JIRN+csYlutTw+I=\");\n\n_c = App;\nexport default App;\n\nfunction HomePage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = HomePage;\n\nfunction Autobidder() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FIFA 22 Autobidder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A completed \\\"cycle\\\" takes around 20 minutes and consists of 4 steps: parsing Futbin for player prices bidding on the Transfer Market, handling the Transfer List (clearing sold, relisting expired), handling the Watch List (clearing expired auctions, listing won players)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The number of cycles is determined by num_cycles, with a sleep_time in minutes between each full cycle (completing steps 1 through 4) as a precaution to avoid a softban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Parsing Futbin for player prices Bot searches using input Futbin URL on line 111 in autobidder.py which can be updated while existing bot thread is closed (thread is closed if GUI is grey, and not green - no need to re-login to change your setup) Player data and cards are stored to player_list.txt  NOTE: futbin_max_price was never implemented and does not do anything (it was meant to ignore players during parsing but I never got around to it, so manually include the price cap in your futbin URL NOTE: futbin_position was never implemented and does not do anything Bidding Bot attempts to make 50 bids (the maximum watchlist size) in up to 30 distinct \\\"searches\\\": clicks the search button parses all cards on page bids on those which if Won should sell for a post-tax profit greater than or equal to the margin Clicks next page Repeats steps i through iv until card expiring at or above expiration_cutoff_mins is detected The bot will return to the Search the Transfer Market page, and make a new search, and repeat the above until watchlist is full or 30 request limit is hit (as safety precaution, bot in theory could make infinite searches as result of user error ie mismatch between input search params + futbin URL, or extreme market caching) Recommended expiration_cutoff_mins is 3 Handling Transfer List Sold players are cleared and logged to logs.csv Expired players are relisted based on undercut_market_on_relist: 0 = relisted for same failed price 1 = relisted for -50 or -100 (if >1k) failed price 2 = relisted for -100 or -200 (if >1k) failed price etc. Handling Watch List Bot waits for all auctions to expire (if applicable). This is where expiration_cutoff_mins during your bidding can bite you - if is high, for example 10 minutes, you might have to waste 5 minutes waiting for the last player expire (assuming it took 5 minutes to finish handling the transfer list), ie you are waiting 5 minutes to make just 100 coins Expired players (lost) are cleared and logged to logs.csv Won players are listed based on undercut_market_on_list: 0 = listed for market price via player_list.txt 1 = listed for -50 or -100 (if >1k) market price 2 = listed for -100 or -200 (if >1k) market price etc.  If for some reason player is not on player_list.txt (happens if you get backed up with too many players selling), bot will flag this and auto list for its bought price Bot then sleeps x minutes set in sleep_time and repeats all the above n num_cycles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = Autobidder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"HomePage\");\n$RefreshReg$(_c3, \"Autobidder\");","map":{"version":3,"names":["useContext","Routes","Route","Link","ThemeContext","Header","About","Projects","Skills","ScrollToTop","Contact","Footer","App","themeName","HomePage","Autobidder"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/App.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { ThemeContext } from \"./contexts/theme\";\nimport Header from \"./components/Header/Header\";\nimport About from \"./components/About/About\";\nimport Projects from \"./components/Projects/Projects\";\nimport Skills from \"./components/Skills/Skills\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport Contact from \"./components/Contact/Contact\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext);\n\n  return (\n    // <div className=\"App\">\n    //   <h1>Welcome to React Router!</h1>\n    //   <Routes>\n    //     <Route path=\"/\" element={<HomeT />} />\n    //     <Route path=\"about\" element={<About />} />\n    //   </Routes>\n    // </div>\n\n    <div id=\"top\" className={`${themeName} app`}>\n      <Header />\n      {/* \n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main> */}\n\n      <Routes>\n        <Route path=\"/\" element={ <HomePage />}  />\n\n        <Route path=\"fifa-autobidder\" element={<Autobidder />} />\n        <Route path=\"fifa-autobidder/manual\" element={<Autobidder />} />\n        \n      </Routes>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n\nfunction HomePage() {\n  return (\n    <>\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n    </>\n  );\n}\n\n\nfunction Autobidder() {\n  return (\n    <>\n      <main>\n        <h1>FIFA 22 Autobidder</h1>\n\n        <div className=\"instructions\">\n        <p>A completed &quot;cycle&quot; takes around 20 minutes and consists of 4 steps: parsing Futbin for player prices bidding on the Transfer Market, handling the Transfer List (clearing sold, relisting expired), handling the Watch List (clearing expired auctions, listing won players)</p>\n\n<p>The number of cycles is determined by num_cycles, with a sleep_time in minutes between each full cycle (completing steps 1 through 4) as a precaution to avoid a softban</p>\n\n<p>Parsing Futbin for player prices Bot searches using input Futbin URL on line 111 in autobidder.py which can be updated while existing bot thread is closed (thread is closed if GUI is grey, and not green - no need to re-login to change your setup) Player data and cards are stored to player_list.txt  NOTE: futbin_max_price was never implemented and does not do anything (it was meant to ignore players during parsing but I never got around to it, so manually include the price cap in your futbin URL NOTE: futbin_position was never implemented and does not do anything Bidding Bot attempts to make 50 bids (the maximum watchlist size) in up to 30 distinct &quot;searches&quot;: clicks the search button parses all cards on page bids on those which if Won should sell for a post-tax profit greater than or equal to the margin Clicks next page Repeats steps i through iv until card expiring at or above expiration_cutoff_mins is detected The bot will return to the Search the Transfer Market page, and make a new search, and repeat the above until watchlist is full or 30 request limit is hit (as safety precaution, bot in theory could make infinite searches as result of user error ie mismatch between input search params + futbin URL, or extreme market caching) Recommended expiration_cutoff_mins is 3 Handling Transfer List Sold players are cleared and logged to logs.csv Expired players are relisted based on undercut_market_on_relist: 0 = relisted for same failed price 1 = relisted for -50 or -100 (if >1k) failed price 2 = relisted for -100 or -200 (if >1k) failed price etc. Handling Watch List Bot waits for all auctions to expire (if applicable). This is where expiration_cutoff_mins during your bidding can bite you - if is high, for example 10 minutes, you might have to waste 5 minutes waiting for the last player expire (assuming it took 5 minutes to finish handling the transfer list), ie you are waiting 5 minutes to make just 100 coins Expired players (lost) are cleared and logged to logs.csv Won players are listed based on undercut_market_on_list: 0 = listed for market price via player_list.txt 1 = listed for -50 or -100 (if >1k) market price 2 = listed for -100 or -200 (if >1k) market price etc.  If for some reason player is not on player_list.txt (happens if you get backed up with too many players selling), bot will flag this and auto list for its bought price Bot then sleeps x minutes set in sleep_time and repeats all the above n num_cycles</p>\n        </div>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,WAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAAC;IAAEC;EAAF,CAAD,IAAkBb,UAAU,CAACI,YAAD,CAAlC;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAK,EAAE,EAAC,KAAR;MAAc,SAAS,EAAG,GAAES,SAAU,MAAtC;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAUE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAG,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA;QAA1B;UAAA;UAAA;UAAA;QAAA,QADF,eAGE,QAAC,KAAD;UAAO,IAAI,EAAC,iBAAZ;UAA8B,OAAO,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAAvC;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE,QAAC,KAAD;UAAO,IAAI,EAAC,wBAAZ;UAAqC,OAAO,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAA9C;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAkBE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAlBF,eAmBE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA;EATF;AA+BD,CAlCD;;GAAMD,G;;KAAAA,G;AAoCN,eAAeA,GAAf;;AAEA,SAASE,QAAT,GAAoB;EAClB,oBACE;IAAA,uBACE;MAAA,wBACE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAUD;;MAXQA,Q;;AAcT,SAASC,UAAT,GAAsB;EACpB,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAGR;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHQ,eAKR;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAA,uBACE,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA,gBADF;AAkBD;;MAnBQA,U"},"metadata":{},"sourceType":"module"}