{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\n\nfunction toTitleCase(string) {\n  return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function (match, index, title) {\n    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n      return match.toLowerCase();\n    }\n\n    if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n      return match;\n    }\n\n    return match.charAt(0).toUpperCase() + match.substr(1);\n  });\n} // See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\n\n\nfunction mightBeEmail(s) {\n  // There's no point trying to validate rfc822 fully, just look for ...@...\n  return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\n\nvar redacted = \"REDACTED (Potential Email Address)\";\n\nfunction redactEmail(string) {\n  if (mightBeEmail(string)) {\n    console.warn(\"This arg looks like an email address, redacting.\");\n    return redacted;\n  }\n\n  return string;\n}\n\nfunction format() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var _str = s || \"\";\n\n  if (titleCase) {\n    _str = toTitleCase(s);\n  }\n\n  if (redactingEmail) {\n    _str = redactEmail(_str);\n  }\n\n  return _str;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","format","smallWords","toTitleCase","string","toString","trim","replace","match","index","title","length","search","charAt","toLowerCase","substr","toUpperCase","mightBeEmail","s","indexOf","redacted","redactEmail","console","warn","arguments","undefined","titleCase","redactingEmail","_str"],"sources":["/Users/tucker/Documents/GitHub/free-time-finder/node_modules/react-ga4/dist/format.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\n\nfunction toTitleCase(string) {\n  return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function (match, index, title) {\n    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n      return match.toLowerCase();\n    }\n\n    if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n      return match;\n    }\n\n    return match.charAt(0).toUpperCase() + match.substr(1);\n  });\n} // See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\n\n\nfunction mightBeEmail(s) {\n  // There's no point trying to validate rfc822 fully, just look for ...@...\n  return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\n\nvar redacted = \"REDACTED (Potential Email Address)\";\n\nfunction redactEmail(string) {\n  if (mightBeEmail(string)) {\n    console.warn(\"This arg looks like an email address, redacting.\");\n    return redacted;\n  }\n\n  return string;\n}\n\nfunction format() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var _str = s || \"\";\n\n  if (titleCase) {\n    _str = toTitleCase(s);\n  }\n\n  if (redactingEmail) {\n    _str = redactEmail(_str);\n  }\n\n  return _str;\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,MAArB;AACA,IAAIC,UAAU,GAAG,4EAAjB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAC3B,OAAOA,MAAM,CAACC,QAAP,GAAkBC,IAAlB,GAAyBC,OAAzB,CAAiC,mCAAjC,EAAsE,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;IAC1G,IAAID,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGD,KAAK,CAACG,MAAd,KAAyBD,KAAK,CAACC,MAA5C,IAAsDH,KAAK,CAACI,MAAN,CAAaV,UAAb,IAA2B,CAAC,CAAlF,IAAuFQ,KAAK,CAACG,MAAN,CAAaJ,KAAK,GAAG,CAArB,MAA4B,GAAnH,KAA2HC,KAAK,CAACG,MAAN,CAAaJ,KAAK,GAAGD,KAAK,CAACG,MAA3B,MAAuC,GAAvC,IAA8CD,KAAK,CAACG,MAAN,CAAaJ,KAAK,GAAG,CAArB,MAA4B,GAArM,KAA6MC,KAAK,CAACG,MAAN,CAAaJ,KAAK,GAAG,CAArB,EAAwBG,MAAxB,CAA+B,QAA/B,IAA2C,CAA5P,EAA+P;MAC7P,OAAOJ,KAAK,CAACM,WAAN,EAAP;IACD;;IAED,IAAIN,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgBH,MAAhB,CAAuB,WAAvB,IAAsC,CAAC,CAA3C,EAA8C;MAC5C,OAAOJ,KAAP;IACD;;IAED,OAAOA,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgBG,WAAhB,KAAgCR,KAAK,CAACO,MAAN,CAAa,CAAb,CAAvC;EACD,CAVM,CAAP;AAWD,C,CAAC;AACF;;;AAGA,SAASE,YAAT,CAAsBC,CAAtB,EAAyB;EACvB;EACA,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACC,OAAF,CAAU,GAAV,MAAmB,CAAC,CAApD;AACD;;AAED,IAAIC,QAAQ,GAAG,oCAAf;;AAEA,SAASC,WAAT,CAAqBjB,MAArB,EAA6B;EAC3B,IAAIa,YAAY,CAACb,MAAD,CAAhB,EAA0B;IACxBkB,OAAO,CAACC,IAAR,CAAa,kDAAb;IACA,OAAOH,QAAP;EACD;;EAED,OAAOhB,MAAP;AACD;;AAED,SAASH,MAAT,GAAkB;EAChB,IAAIiB,CAAC,GAAGM,SAAS,CAACb,MAAV,GAAmB,CAAnB,IAAwBa,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA5E;EACA,IAAIE,SAAS,GAAGF,SAAS,CAACb,MAAV,GAAmB,CAAnB,IAAwBa,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAApF;EACA,IAAIG,cAAc,GAAGH,SAAS,CAACb,MAAV,GAAmB,CAAnB,IAAwBa,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;;EAEA,IAAII,IAAI,GAAGV,CAAC,IAAI,EAAhB;;EAEA,IAAIQ,SAAJ,EAAe;IACbE,IAAI,GAAGzB,WAAW,CAACe,CAAD,CAAlB;EACD;;EAED,IAAIS,cAAJ,EAAoB;IAClBC,IAAI,GAAGP,WAAW,CAACO,IAAD,CAAlB;EACD;;EAED,OAAOA,IAAP;AACD"},"metadata":{},"sourceType":"script"}